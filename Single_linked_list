#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *next;
};
void create(struct node**st,int n){
	struct node *t;
	struct node new= (struct node)malloc(sizeof(struct node));
	new->data=n;
	new->next=NULL;
	if(*st==NULL){
		*st=new;
	}
	else{
		t=*st;
		while(t->next!=NULL){
		t=t->next;
		}
		t->next=new;
	}
}
void display(struct node**st){
	struct node *t=*st;
	while(t!=NULL){
		printf("%d ",t->data);
		t=t->next;
	}
}
void insert(struct node**st,int n,int m){
	struct node new=(struct node)malloc(sizeof(struct node));
	int k=1;
	struct node *t=*st;
	if(n==1){
		new->next=(*st)->next;
		*st=new;
	}
	else{
		while(k<(n-2) && t!=NULL){
			t=t->next;
			k++;
		}
		new->next=t->next;
		t->next=new;
	}
	new->data= m;
}
void delete(struct node**st, int r){
	struct node *t=*st;
	struct node *t1;
	if(r==1){
		*st=(*st)->next;
		free(t);
	}
	else{
		int k=1;
		while(k<(r-1) && t!=NULL){
			t=t->next;
			k++;
		}
		t1=t->next;
		t->next=t->next->next;
	}
}
void deletek(struct node **st, int s){
	struct node *t=*st;
	struct node *t1;
	while(t->data!=s && t!=NULL){
		t1=t;
		t=t->next;
	}
	if(t==NULL){
		printf("Element not found");
	}
	else{
		t1->next=t1->next->next;
		free(t);
	}
}

void count(struct node **st){
	int k=1;
	struct node *t=*st;
	if(*st==NULL){
		printf("List is empty");
	}
	else{
		while(t->next!=NULL){
			k++;
			t=t->next;
		}
	printf("No. of Nodes: %d",k);
	}
}
void search(struct node **st, int u){
	int k=1;
	struct node *t=*st;
	while(t!=NULL && t->data!=u){
		t=t->next;
		k++;
	}
	if(t==NULL)
		printf("Element not found");
	else
		printf("The element is found in %d position",k);
}
int main(){
	struct node *start=NULL;
	char c='y';
	while(c=='y'){
	printf("\nMenu:\n1)Create a node\n2) Traversal of the list.\n3) Check if the list is empty.\n4) Insert a node at beginning/end/any position.\n5) Delete a node from beginning/end/any position.\n6) Delete a node for the given key.\n7) Count the total number of nodes.\n8) Search for an element in the linked list.");
	printf("\nEnter your choice:");
	int n;
	int ch;
	scanf("%d",&ch);
	switch (ch){
		case 1:
		printf("\nEnter the value:");
		scanf("%d",&n);
		create(&start,n);
		break;

		case 2:
		printf("\n");
		display(&start);
		break;

		case 3:
		if(start==NULL){
			printf("The list is empty");
		}
		else {
			printf("The list is not empty");
		}
		break;

		case 4:
		printf("\nEnter the position:");
		int p;
		scanf("%d",&p);
		printf("\nEnter element: ");
		int m;
		scanf("%d",&m);
		insert(&start,p,m);
		break;

		case 5:
		printf("\nEnter the position: ");
		int r;
		scanf("%d",&r);
		delete(&start,r);
		break;

		case 6:
		printf("Enter the element: ");
		int s;
		scanf("%d",&s);
		deletek(&start,s);
		break; 

		case 7:
		count(&start);
		break;

		case 8:
		printf("Enter the element: ");
		int u;
		scanf("%d",&u);
		search(&start,u);

	}
	printf("\nDo you wish to continue? ");
	getchar();
	scanf("%c",&c);
	}
	returnÂ 0;
}
